apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildToolsVersion
    testOptions.unitTests.includeAndroidResources true

    lintOptions {
        quiet true
        abortOnError true
        ignoreWarnings false
    }

    defaultConfig {
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionName project.libraryVersionName
        versionCode project.libraryVersionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    // External dependencies
    api dep.kotlinCoroutines
    api dep.kotlinStdLib

    api dep.securePreferences
    api dep.okhttp3

    // Test dependencies
    testImplementation dep.jUnit
    testImplementation dep.androidTest
    testImplementation dep.robolectric
    androidTestImplementation dep.testRunner
    androidTestImplementation dep.testRules
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

// Generate Source Jar
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

// Create the publication with the pom configuration
def libRepo = 'maven'
def libGroupId = 'com.iadvize'
def libLabels = ['iadvize', 'graylog', 'android', 'kotlin']
def libDesc = 'Client-side Android logging library for Graylog.'
def libArtifactId = 'kotling-graylog'
def libVersion = project.libraryVersionName
def libOrg = 'iadvize'
def libLicenses = ['Apache-2.0']
def libSiteUrl = 'https://github.com/iadvize/kotlin-graylog'
def libIssueUrl = 'https://github.com/iadvize/kotlin-graylog/issues'
def libGitUrl = 'https://github.com/iadvize/kotlin-graylog.git'

// Create the publication with the pom configuration
publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId libGroupId
            artifactId libArtifactId
            version libVersion
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/kotlin-graylog-release.aar")

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.api.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                configurations.runtimeOnly.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'runtime')
                    }
                }
            }
        }
    }
}

// Bintray config
def _user = System.getenv("BINTRAY_USER")
def _key =  System.getenv("BINTRAY_API_KEY")

if(project.rootProject.file('local.properties').exists() && (_user == null || _user.isEmpty())){
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    _user = properties.getProperty("bintrayUser")
    _key = properties.getProperty("bintrayApiKey")
}

bintray {
    user = _user
    key = _key
    publications = ['MyPublication']
    pkg {
        repo = libRepo
        userOrg = libOrg
        name = "android-$libArtifactId"
        desc = libDesc
        licenses = libLicenses
        websiteUrl = libSiteUrl
        issueTrackerUrl = libIssueUrl
        vcsUrl = libGitUrl
        labels = libLabels
        version {
            name = libVersion
            vcsTag = libVersion
            released = new Date()
        }
        publish = true
    }
}
